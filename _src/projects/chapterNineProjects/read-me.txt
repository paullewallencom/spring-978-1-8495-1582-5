In case, maven could not find  a jar file, you can use your custom repository by :
1- Add repositories to the maven's setting file(settings.xml)
 2- run : mvn -P my-repository  clean package 
 
 
 Adding repository to the maven's setting file:
Add following profile to the settings.xml(if exist) under repositoty location and under "maven instalation folder"\conf  folder


<profile>
    <id>my-repository</id>
    <activation>
                <activeByDefault>true</activeByDefault>
    </activation>
    
    <!-- list of standard repository -->
   	<repositories>
        <repository>
            <id>spring-release</id>
            <name>Spring Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </repository>
        <repository>
            <id>jboss</id>
            <name>jboss Repository</name>
            <url>http://repository.jboss.org/maven2</url>
        </repository>
        <repository>
            <id>ibilio maven-2</id>
            <name>ibilio Repository</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository> 

		<repository>
			<id>oracle</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://www.mvnsearch.org/maven2/</url>
		</repository>
        <repository>
            <id>ibilio maven-1</id>
            <name>ibilio Repository</name>
            <url>http://download.java.net/maven/1</url>
        </repository> 
    </repositories> 
  
    </profile>