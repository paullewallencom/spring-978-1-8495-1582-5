<!-- * This software is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND. -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
       <!--  <property name="soapVersion">
            <util:constant static-field="org.springframework.ws.soap.SoapVersion.SOAP_11" />
        </property> -->
    </bean>
	<bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="messageFactory" />
		<property name="defaultUri"
			value="http://localhost:8080/LiveRestaurant/spring-ws/OrderService" />
<property name="interceptors">

			
				
	

<!--Case 1: Encryption/Decryption using a shared symmetric key -->
<!--   <bean
				class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
				<property name="securementActions" value="Encrypt" />
    <property name="securementEncryptionKeyIdentifier" value="EmbeddedKeyName"/> 
    <property name="securementEncryptionUser" value="symmetric"/>
    <property name="securementEncryptionEmbeddedKeyName" value="symmetric"/>
    <property name="SecurementEncryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
        
				   <property name="securementCallbackHandler">
        <bean class="org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler">
            <property name="symmetricKeyPassword" value="keyPassword"/>
            <property name="keyStore">
                <bean class="org.springframework.ws.soap.security.support.KeyStoreFactoryBean">
                    <property name="location" value="/symmetricStore.jks"/>
                    <property name="type" value="JCEKS"/>
                    <property name="password" value="symmetricPassword"/>
                </bean>
            </property>
        </bean> 
        </property>
        </bean>  --> 
        <!--Case 1: End -->
        
                   	<!--case 2 or case 3: Encryption using a server trusted certificate in client-side 
		key store(clientStore.jsk) and decryption in server-side private key (serverStore.jks) -->
 		  <bean
				class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
				<property name="securementActions" value="Encrypt" />
				<!-- case 3 only-->
				<property name="securementEncryptionParts"
value="{Content}{http://www.packtpub.com/liverestaurant/OrderService/schema}placeOrderRequest"/>
    <!-- case 3 end -->
				<property name="securementEncryptionUser" value="server" />
				<property name="securementEncryptionCrypto">
					<bean
						class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
						<property name="keyStorePassword" value="clientPassword" />
						<property name="keyStoreLocation" value="/clientStore.jks" />
					</bean>
				</property>
			</bean> 
	<!--case 2 or 3: End -->
        
        
		</property>

    </bean>
    
 
	
    	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>src/test/resources/log4j.properties</value>
			</list>
		</property>
	</bean>	
</beans>
