<!-- * This software is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND. -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
       <!--  <property name="soapVersion">
            <util:constant static-field="org.springframework.ws.soap.SoapVersion.SOAP_11" />
        </property> -->
    </bean>
	<bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="messageFactory" />
		<property name="defaultUri"
			value="http://localhost:8080/LiveRestaurant/spring-ws/OrderService" />
		 <property name="interceptors">
		
		<list>
 			<ref local="xwsSecurityInterceptor"/>
			
			</list>
		</property>
    </bean>
    
    <bean id="xwsSecurityInterceptor" 
			class="org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor">
		    <property name="policyConfiguration" value="/securityPolicy.xml"/>
		    <property name="callbackHandlers">
		            <list>
		             <ref bean="keyStoreHandler"/>
		               
		           	</list>
		    </property>
	</bean>
	

	
	
	<!--Case 1: Encryption/Decryption using a shared symmetric key -->
<!--  <bean id="symmetricStore"
		class="org.springframework.ws.soap.security.support.KeyStoreFactoryBean">
		<property name="password" value="symmetricPassword" />
		<property name="location" value="/symmetricStore.jks" />
		<property name="type" value="JCEKS" />
		
	</bean>

	<bean id="keyStoreHandler"
		class="org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler">
		<property name="symmetricStore" ref="symmetricStore" />
		<property name="symmetricKeyPassword" value="keyPassword" />
	
	</bean>  -->

	<!--Case 1: End -->
 
	<!--case 2 or case 3: Encryption using a server trusted certificate in client-side 
		key store(clientStore.jsk) and decryption in server-side private key (serverStore.jks) -->
	 <bean id="keyStoreHandler"
		class="org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler">
		<property name="trustStore" ref="trustStore"/>
			
	</bean>

	<bean id="trustStore"
		class="org.springframework.ws.soap.security.support.KeyStoreFactoryBean">
		<property name="location" value="/clientStore.jks" />
		<property name="password" value="clientPassword" />
	</bean> 
	<!--case 2 or 3: End -->
	
    	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>src/test/resources/log4j.properties</value>
			</list>
		</property>
	</bean>	
</beans>
