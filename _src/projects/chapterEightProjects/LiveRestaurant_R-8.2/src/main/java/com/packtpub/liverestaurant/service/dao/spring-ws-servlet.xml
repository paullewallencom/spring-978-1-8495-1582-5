<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="com.packtpub.liverestaurant.service.endpoint"/>

    <sws:annotation-driven/>

    <sws:dynamic-wsdl id="OrderService" portTypeName="OrderService" locationUri="http://localhost:8080/LiveRestaurant/spring-ws/OrderService"
                      targetNamespace="http://www.packtpub.com/LiveRestaurant/OrderService/schema">
        <sws:xsd location="/WEB-INF/OrderService.xsd"/>
    </sws:dynamic-wsdl>

    <sws:interceptors>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
            <property name="schema" value="/WEB-INF/OrderService.xsd"/>
            <property name="validateRequest" value="true"/>
            <property name="validateResponse" value="true"/>
        </bean>
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor">
        </bean>

	<bean id="wss4jSecurityInterceptor"
		class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
		<property name="validationCallbackHandler" ref="springSecurityHandler" />
		
		<property name="validationActions" value="UsernameToken" />

	</bean>
                 			
    </sws:interceptors> 
    
    
   <!-- case 1:Authenticating of a web service call using Spring Security to authenticate a   plain username token  -->  
<!--     <bean id="springSecurityHandler"
      class="org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler">
    <property name="authenticationManager" ref="authenticationManager"/>
  </bean>

  <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
      <property name="providers">
          <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
              <property name="userDetailsService" ref="userDetailsService"/>
          </bean>
      </property>
  </bean> -->

   <!-- case 1: End-->
  

 <!-- case 2:Authenticating of a web service call using Spring Security to authenticate a   digested username token  -->
  <bean  id="springSecurityHandler" class="org.springframework.ws.soap.security.wss4j.callback.SpringDigestPasswordValidationCallbackHandler">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>
  
 <!-- case 2: End-->

  <bean id="userDetailsService" class="com.packtpub.liverestaurant.dao.MyUserDetailService" />
  <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
  
</beans>


